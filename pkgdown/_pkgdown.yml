template:
  params:
    bootswatch: sandstone

development:
  mode: unreleased

navbar:
  title: "vegawidget"
  left:
    - icon: fa-home fa-lg
      href: index.html
    - text: "Getting Started"
      href: articles/vegawidget.html
    - text: "Reference"
      href: reference/index.html
    - text: "Changelog"
      href: news/index.html
    - text: "Articles"
      menu:
        - text: "Specify using vegaspec"
          href: articles/articles/vegaspec.html
        - text: "Render using vegawidget"
          href: articles/articles/render-vegawidget.html
        - text: "Extend using Shiny"
          href: articles/articles/shiny.html
        - text: "Extend using JavaScript"
          href: articles/articles/javascript.html
        - text: "Create Images"
          href: articles/articles/image.html
        - text: "Work with Dates and Times"
          href: articles/articles/dates-times.html
        - text: "Import into Other Packages"
          href: articles/articles/import.html
  right:
    - icon: fa-github fa-lg
      href: https://github.com/vegawidget/vegawidget

reference:
  - title: "Specifying: vegaspec"
    desc: >
      The central *object* of this package is a `vegaspec`, which is also
      a `list`. Use these functions to coerce to a `vegaspec`,
      format as JSON, or otherwise operate on a `vegaspec`. If you have
      [**nodejs**](https://nodejs.org/en/) installed,
      you can compile a Vega-Lite specification to a Vega specification.
    contents:
      - as_vegaspec
      - vw_examine
      - vw_as_json
      - vw_autosize
      - vw_rename_datasets
      - vw_to_vega
      - vw_spec_version
      - vega_schema
  - title: "Rendering: vegawidget"
    desc: >
      The central *side-effect* of this package is to render a `vegawidget`,
      which is also an `htmlwidget`. A `vegawidget` is
      built using a `vegaspec`. A helper function is provided for
      [vega-embed](https://github.com/vega/vega-embed) options. These options
      can be specified as an argument to the `vegawidget` function,
      or as an R option, `vega.embed`, which would picked up by the
      `knit_print` method.
      To knit to non-HTML-format, please consult the
      [article on rendering](../articles/articles/render-vegawidget.html#knitting-strategies)
    contents:
    - vegawidget
    - vega_embed
    - knit_print.vegaspec
  - title: "Shiny"
    desc: >
      This package lets you render vegawidgets in Shiny. Once renrdered,
      it also provides functions to access Vega datasets, signals,
      and events from Shiny. The function `vw_shiny_demo()` lets you
      run any of this package's demo apps; call it without arguments
      to see the list of available apps. This
      [article on Shiny](../articles/articles/shiny.html) goes into some detail.
    contents:
    - renderVegawidget
    - vegawidgetOutput
    - shiny-setters
    - shiny-getters
    - vw_shiny_demo
  - title: "JavaScript"
    desc: >
      In addition to Shiny, this package provides functions to
      add JavaScript listeners to Vega charts and to compose
      JavaScript handlers. This lets you create interactivity in RMarkdown
      documents, but *you* are responsible for providing all the additional
      HTML and JS code to make it work. To see some examples, please
      see this [article on JavaScript](../articles/javascript.html).
    contents:
    - add-listeners
    - vw_handler_signal
    - vw_handler_add_effect
    - glue_js
  - title: "Data"
    desc: >
      This package provides some sample specifications and datasets.
    contents:
    - spec_mtcars
    - data_category
    - data_seattle_daily
    - data_seattle_hourly
  - title: "Images"
    desc: >
      If you have [**nodejs**](https://nodejs.org/en/)
      installed, you can convert and write a `vegaspec` or a
      `vegawidget` to SVG. To convert to a bitmap, or to write
      to a PNG file, you will need the
      [**rsvg**](https://CRAN.R-project.org/package=rsvg) and
      [**png**](https://CRAN.R-project.org/package=png) packages.
    contents:
    - vw_to_svg
    - vw_to_bitmap
    - vw_write_svg
    - vw_write_png
  - title: "Utilities"
    desc: >
      You can use `use_vegawidget()` to bring this package's functionality to
      yours. Much like `usethis::use_pipe()` allows you to re-export the pipe
      in your package's namespace, `use_vegawidget()` does this for many of
      these functions, as detailed in this [article](../articles/articles/import.html).
      The other functions deal with serializing date-times,
      and versions of Vega's JavaScript libraries.
    contents:
    - use_vegawidget
    - vw_serialize_data
    - vega_version




